import os
import sys
import subprocess
import json
import serial.tools.list_ports
import requests
import time
from datetime import datetime
import threading

base64_test_image = ""

class Colors:
    """ANSI color codes for console output"""
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

class PrintServerSetup:
    def __init__(self):
        self.conda_env_name = "ltw-print"
        self.python_version = "3.11"
        self.project_dir = os.path.dirname(os.path.abspath(__file__))
        self.requirements_file = os.path.join(self.project_dir, "requirements.txt")
        self.print_py = os.path.join(self.project_dir, "print.py")
        self.server_py = os.path.join(self.project_dir, "server.py")
        
    def print_header(self, title):
        """Print a formatted header"""
        print(f"\n{Colors.HEADER}{'='*60}{Colors.ENDC}")
        print(f"{Colors.HEADER}{Colors.BOLD}{title.center(60)}{Colors.ENDC}")
        print(f"{Colors.HEADER}{'='*60}{Colors.ENDC}")
        
    def print_step(self, step, message):
        """Print a formatted step"""
        print(f"\n{Colors.OKBLUE}[Step {step}]{Colors.ENDC} {Colors.BOLD}{message}{Colors.ENDC}")
        
    def print_success(self, message):
        """Print success message"""
        print(f"{Colors.OKGREEN}✓ {message}{Colors.ENDC}")
        
    def print_warning(self, message):
        """Print warning message"""
        print(f"{Colors.WARNING}⚠ {message}{Colors.ENDC}")
        
    def print_error(self, message):
        """Print error message"""
        print(f"{Colors.FAIL}✗ {message}{Colors.ENDC}")
        
    def get_user_input(self, prompt, default=None):
        """Get user input with optional default"""
        if default:
            user_input = input(f"{prompt} [{default}]: ").strip()
            return user_input if user_input else default
        return input(f"{prompt}: ").strip()
        
    def run_command(self, command, shell=True, capture_output=True):
        """Run a command and return result"""
        try:
            result = subprocess.run(command, shell=shell, capture_output=capture_output, text=True)
            return result.returncode == 0, result.stdout, result.stderr
        except Exception as e:
            return False, "", str(e)
            
    def check_conda(self):
        """Check if conda is installed"""
        self.print_step(1, "Checking for Conda installation...")
        
        success, stdout, stderr = self.run_command("conda --version")
        if success:
            version = stdout.strip()
            self.print_success(f"Conda found: {version}")
            return True
        else:
            self.print_error("Conda not found!")
            print(f"{Colors.WARNING}Please install Anaconda or Miniconda first:{Colors.ENDC}")
            print("https://docs.conda.io/en/latest/miniconda.html")
            return False
            
    def check_conda_env(self):
        """Check if conda environment exists"""
        self.print_step(2, f"Checking for conda environment '{self.conda_env_name}'...")
        
        success, stdout, stderr = self.run_command("conda env list")
        if success and self.conda_env_name in stdout:
            self.print_success(f"Environment '{self.conda_env_name}' already exists")
            return True
        else:
            self.print_warning(f"Environment '{self.conda_env_name}' not found")
            return False
            
    def create_conda_env(self):
        """Create conda environment"""
        print(f"\n{Colors.OKCYAN}Creating conda environment '{self.conda_env_name}' with Python {self.python_version}...{Colors.ENDC}")
        
        command = f"conda create -n {self.conda_env_name} python={self.python_version} -y"
        success, stdout, stderr = self.run_command(command)
        
        if success:
            self.print_success(f"Environment '{self.conda_env_name}' created successfully")
            return True
        else:
            self.print_error(f"Failed to create environment: {stderr}")
            return False
            
    def install_requirements(self):
        """Install requirements in conda environment"""
        self.print_step(3, "Installing requirements...")
        
        if not os.path.exists(self.requirements_file):
            self.print_error(f"Requirements file not found: {self.requirements_file}")
            return False
            
        # First install pip in the conda environment
        print(f"{Colors.OKCYAN}Installing pip in conda environment...{Colors.ENDC}")
        pip_command = f"conda run -n {self.conda_env_name} conda install pip -y"
        success, stdout, stderr = self.run_command(pip_command)
        
        if not success:
            self.print_error(f"Failed to install pip: {stderr}")
            return False
            
        # Install requirements
        print(f"{Colors.OKCYAN}Installing Python packages...{Colors.ENDC}")
        command = f"conda run -n {self.conda_env_name} pip install -r {self.requirements_file}"
        success, stdout, stderr = self.run_command(command)
        
        if success:
            self.print_success("Requirements installed successfully")
            return True
        else:
            self.print_error(f"Failed to install requirements: {stderr}")
            return False
            
    def list_serial_ports(self):
        """List available serial ports"""
        ports = serial.tools.list_ports.comports()
        if not ports:
            return []
        return [(port.device, port.description) for port in ports]
        
    def check_and_update_serial_com(self):
        """Check current COM port and allow user to update it"""
        self.print_step(4, "Checking and configuring serial COM port...")
        
        if not os.path.exists(self.print_py):
            self.print_error(f"print.py not found: {self.print_py}")
            return False
            
        # Read current settings from print.py
        current_com = "COM4"  # default
        try:
            with open(self.print_py, 'r') as f:
                content = f.read()
                # Look for the setting dictionary
                if '"serial_com_port"' in content:
                    import re
                    match = re.search(r'"serial_com_port":\s*"(COM\d+)"', content)
                    if match:
                        current_com = match.group(1)
        except Exception as e:
            self.print_warning(f"Could not read current COM port: {e}")
            
        print(f"\n{Colors.OKCYAN}Current COM port: {current_com}{Colors.ENDC}")
        
        # List available ports
        ports = self.list_serial_ports()
        if ports:
            print(f"\n{Colors.OKCYAN}Available serial ports:{Colors.ENDC}")
            for i, (device, description) in enumerate(ports, 1):
                print(f"  {i}. {device} - {description}")
        else:
            self.print_warning("No serial ports detected")
            
        # Ask user if they want to change COM port
        change = self.get_user_input(f"\nDo you want to change the COM port? (y/n)", "n").lower()
        
        if change in ['y', 'yes']:
            if ports:
                print(f"\n{Colors.OKCYAN}Select a port number, or enter custom COM port:{Colors.ENDC}")
                choice = self.get_user_input("Choice", current_com)
                
                new_com = current_com
                if choice.isdigit():
                    port_index = int(choice) - 1
                    if 0 <= port_index < len(ports):
                        new_com = ports[port_index][0]
                elif choice.upper().startswith('COM'):
                    new_com = choice.upper()
                    
                if new_com != current_com:
                    if self.update_com_port_in_file(new_com):
                        self.print_success(f"COM port updated to {new_com}")
                        return True
                    else:
                        self.print_error("Failed to update COM port")
                        return False
            else:
                new_com = self.get_user_input("Enter COM port", current_com).upper()
                if new_com != current_com:
                    if self.update_com_port_in_file(new_com):
                        self.print_success(f"COM port updated to {new_com}")
                        return True
                        
        self.print_success(f"Using COM port: {current_com}")
        return True
        
    def update_com_port_in_file(self, new_com):
        """Update COM port in print.py"""
        try:
            with open(self.print_py, 'r') as f:
                content = f.read()
                
            # Replace the COM port in the settings
            import re
            new_content = re.sub(
                r'"serial_com_port":\s*"COM\d+"',
                f'"serial_com_port": "{new_com}"',
                content
            )
            
            with open(self.print_py, 'w') as f:
                f.write(new_content)
                
            return True
        except Exception as e:
            self.print_error(f"Failed to update print.py: {e}")
            return False
            
    def test_server_startup(self):
        """Test if the server can start"""
        self.print_step(5, "Testing server startup...")
        
        print(f"{Colors.OKCYAN}Starting server in test mode...{Colors.ENDC}")
        
        # Start server in background
        try:
            process = subprocess.Popen(
                f"conda run -n {self.conda_env_name} python {self.server_py}",
                shell=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True
            )
            
            # Wait a few seconds for server to start
            print("Waiting for server to start...")
            time.sleep(5)
            
            # Test health endpoint
            try:
                response = requests.get("http://localhost:3000/health", timeout=5)
                if response.status_code == 200:
                    self.print_success("Server started successfully!")
                    data = response.json()
                    print(f"  Status: {data.get('status')}")
                    print(f"  Message: {data.get('message')}")
                    
                    # Test status endpoint
                    response = requests.get("http://localhost:3000/status", timeout=5)
                    if response.status_code == 200:
                        data = response.json()
                        print(f"  Active threads: {data.get('active_threads')}")
                        
                    process.terminate()
                    return True
                else:
                    self.print_error(f"Server health check failed: {response.status_code}")
                    
            except requests.exceptions.RequestException as e:
                self.print_error(f"Could not connect to server: {e}")
                
            process.terminate()
            return False
            
        except Exception as e:
            self.print_error(f"Failed to start server: {e}")
            return False
            
    def test_print_functionality(self):
        """Test print functionality"""
        self.print_step(6, "Testing print functionality...")
        
        test_data = {
            "main": base64_test_image,
            "second": base64_test_image,
            "body": "Test print from setup script",
            "timestamp": datetime.now().isoformat()
        }
        
        # Create test JSON file
        test_file = os.path.join(self.project_dir, "test_print.json")
        try:
            with open(test_file, 'w') as f:
                json.dump(test_data, f, indent=2)
                
            print(f"{Colors.OKCYAN}Running print test...{Colors.ENDC}")
            command = f"conda run -n {self.conda_env_name} python {self.print_py} --file {test_file}"
            success, stdout, stderr = self.run_command(command)
            
            if success:
                self.print_success("Print test completed successfully!")
                if stdout:
                    print(f"Output: {stdout}")
            else:
                self.print_warning("Print test had issues:")
                if stderr:
                    print(f"Errors: {stderr}")
                    
            # Clean up
            if os.path.exists(test_file):
                os.remove(test_file)
                
            return success
            
        except Exception as e:
            self.print_error(f"Print test failed: {e}")
            return False
            
    def run_integration_test(self):
        """Run full integration test"""
        self.print_step(7, "Running integration test...")
        
        print(f"{Colors.OKCYAN}Starting server for integration test...{Colors.ENDC}")
        
        # Start server
        process = None
        try:
            process = subprocess.Popen(
                f"conda run -n {self.conda_env_name} python {self.server_py}",
                shell=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True
            )
            
            time.sleep(3)
            
            # Send test data to server
            test_data = {
                "main": "",
                "second": "",
                "body": "Integration test from setup script"
            }
            
            response = requests.post(
                "http://localhost:3000/api/data",
                json=test_data,
                timeout=10
            )
            
            if response.status_code == 200:
                self.print_success("Integration test passed!")
                data = response.json()
                print(f"  Server response: {data.get('message')}")
                return True
            else:
                self.print_error(f"Integration test failed: {response.status_code}")
                return False
                
        except Exception as e:
            self.print_error(f"Integration test failed: {e}")
            return False
        finally:
            if process:
                process.terminate()
                
    def show_final_instructions(self):
        """Show final usage instructions"""
        self.print_header("Setup Complete!")
        
        print(f"{Colors.OKGREEN}Your TouchDesigner Print Server is ready!{Colors.ENDC}\n")
        
        print(f"{Colors.BOLD}To start the server:{Colors.ENDC}")
        print(f"1. Open command prompt in: {self.project_dir}")
        print(f"2. Activate conda environment: {Colors.OKCYAN}conda activate {self.conda_env_name}{Colors.ENDC}")
        print(f"3. Start server: {Colors.OKCYAN}python server.py{Colors.ENDC}")
        
        print(f"\n{Colors.BOLD}Server endpoints:{Colors.ENDC}")
        print(f"• Health check: {Colors.OKCYAN}http://localhost:3000/health{Colors.ENDC}")
        print(f"• Status check: {Colors.OKCYAN}http://localhost:3000/status{Colors.ENDC}")
        print(f"• Print endpoint: {Colors.OKCYAN}http://localhost:3000/api/data{Colors.ENDC}")
        
        print(f"\n{Colors.BOLD}Troubleshooting:{Colors.ENDC}")
        print(f"• Check COM port in print.py if printing fails")
        print(f"• Ensure printer is connected and powered on")
        print(f"• Check that printer has paper loaded")
        
    def run(self):
        """Run the complete setup process"""
        self.print_header("CCI London Tech Week - Print Server Setup")
        
        print(f"{Colors.OKCYAN}This wizard will guide you through setting up the TouchDesigner Print Server{Colors.ENDC}")
        print(f"Project directory: {self.project_dir}")
        
        input(f"\n{Colors.BOLD}Press Enter to continue...{Colors.ENDC}")
        
        # Step 1: Check conda
        if not self.check_conda():
            return False
            
        # Step 2: Check/create environment
        if not self.check_conda_env():
            if not self.create_conda_env():
                return False
                
        # Step 3: Install requirements
        if not self.install_requirements():
            return False
            
        # Step 4: Configure COM port
        if not self.check_and_update_serial_com():
            return False
            
        # Step 5: Test server startup
        if not self.test_server_startup():
            self.print_warning("Server test failed, but continuing...")
            
        # Step 6: Test print functionality
        print(f"\n{Colors.OKCYAN}Do you want to test print functionality? This will attempt to print to the configured printer.{Colors.ENDC}")
        test_print = self.get_user_input("Test printing? (y/n)", "n").lower()
        if test_print in ['y', 'yes']:
            self.test_print_functionality()
            
        # Step 7: Integration test
        print(f"\n{Colors.OKCYAN}Do you want to run a full integration test? This will test the complete workflow.{Colors.ENDC}")
        test_integration = self.get_user_input("Run integration test? (y/n)", "y").lower()
        if test_integration in ['y', 'yes']:
            self.run_integration_test()
            
        # Show final instructions
        self.show_final_instructions()
        
        return True

def main():
    """Main entry point"""
    try:
        # Enable ANSI colors on Windows
        if sys.platform == "win32":
            os.system("color")
            
        setup = PrintServerSetup()
        success = setup.run()
        
        if success:
            print(f"\n{Colors.OKGREEN}Setup completed successfully!{Colors.ENDC}")
        else:
            print(f"\n{Colors.FAIL}Setup encountered errors. Please check the output above.{Colors.ENDC}")
            
    except KeyboardInterrupt:
        print(f"\n{Colors.WARNING}Setup cancelled by user{Colors.ENDC}")
    except Exception as e:
        print(f"\n{Colors.FAIL}Unexpected error: {e}{Colors.ENDC}")
        
if __name__ == "__main__":
    main()